{"id":"node_modules/duration-fns/dist/isZero.js","dependencies":[{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/isZero.js.map","includedInParent":true,"mtime":1643565527424},{"name":"/home/htomaka/Projects/workout/package.json","includedInParent":true,"mtime":1643565530508},{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/package.json","includedInParent":true,"mtime":1643565527368},{"name":"./toUnit","loc":{"line":4,"column":23},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/isZero.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toUnit.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isZero = void 0;\nvar toUnit_1 = require(\"./toUnit\");\n/**\n * Returns `true` if all the units of the duration sum to zero.\n *\n * Note, this function performs implicit normalization, so ambiguous\n * units, like months, work with average values.\n *\n * @example\n * isZero('P0D') // true\n * isZero({ years: 0 }) // true\n * isZero({ days: 1, hours: -24 }) // true\n * isZero({ days: 1 }) // false\n */\nvar isZero = function (duration) {\n    return toUnit_1.toMilliseconds(duration) === 0;\n};\nexports.isZero = isZero;\n"},"sourceMaps":{"js":{"version":3,"file":"isZero.js","sourceRoot":"","sources":["../src/isZero.ts"],"names":[],"mappings":";;;AACA,mCAA0C;AAE1C;;;;;;;;;;;GAWG;AACI,IAAM,MAAM,GAAG,UAAC,QAAuB;IAC7C,OAAA,uBAAc,CAAC,QAAQ,CAAC,KAAK,CAAC;AAA9B,CAA8B,CAAC;AADnB,QAAA,MAAM,UACa","sourcesContent":[null]}},"error":null,"hash":"1e61504545a2d603e6cc893b7d08d175","cacheData":{"env":{}}}