{"id":"node_modules/duration-fns/dist/toUnit.js","dependencies":[{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toUnit.js.map","includedInParent":true,"mtime":1643565527484},{"name":"/home/htomaka/Projects/workout/package.json","includedInParent":true,"mtime":1643565530508},{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/package.json","includedInParent":true,"mtime":1643565527368},{"name":"./parse","loc":{"line":4,"column":22},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toUnit.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/parse.js"},{"name":"./lib/units","loc":{"line":5,"column":22},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toUnit.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/lib/units.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toYears = exports.toMonths = exports.toWeeks = exports.toDays = exports.toHours = exports.toMinutes = exports.toSeconds = exports.toUnit = exports.toMilliseconds = void 0;\nvar parse_1 = require(\"./parse\");\nvar units_1 = require(\"./lib/units\");\n/**\n * Convert the input value to milliseconds represented by a duration object.\n * If a number is passed this is returned verbatim as the number\n * of milliseconds.\n *\n * @example toMilliseconds({ days: 1 }) // 86400000\n */\nvar toMilliseconds = function (duration) {\n    var parsed = parse_1.parse(duration);\n    return units_1.UNITS_META.reduce(function (total, _a) {\n        var unit = _a.unit, milliseconds = _a.milliseconds;\n        return total + (parsed[unit] * milliseconds);\n    }, 0);\n};\nexports.toMilliseconds = toMilliseconds;\n/**\n * Convert the input value to the specificed unit.\n * @example toUnit({ minutes: 2 }, 'seconds') // 120\n */\nvar toUnit = function (duration, unit) {\n    return exports.toMilliseconds(duration) / units_1.UNITS_META_MAP[unit].milliseconds;\n};\nexports.toUnit = toUnit;\nvar createDurationConverter = function (unit) {\n    return function (duration) { return exports.toUnit(duration, unit); };\n};\n/**\n * Convert the input value to seconds.\n * @example toSeconds({ minutes: 2 }) // 120\n */\nexports.toSeconds = createDurationConverter('seconds');\n/**\n * Convert the input value to minutes.\n * @example toMinutes({ hours: 1, minutes: 10 }) // 70\n */\nexports.toMinutes = createDurationConverter('minutes');\n/**\n * Convert the input value to hours.\n * @example toHours({ days: 1 }) // 24\n */\nexports.toHours = createDurationConverter('hours');\n/**\n * Convert the input value to days.\n * @example toDays({ hours: 12 }) // 0.5\n */\nexports.toDays = createDurationConverter('days');\n/**\n * Convert the input value to weeks.\n * @example toWeeks({ days: 14 }) // 2\n */\nexports.toWeeks = createDurationConverter('weeks');\n/**\n * Convert the input value to months.\n * Note, this is a rough approximation as the length of a month is variable.\n *\n * @example toMonths({ months: 10, days: 365 }) // 11\n */\nexports.toMonths = createDurationConverter('months');\n/**\n * Convert the input value to years.\n * Note, this is a rough approximation as the length of a year is variable.\n *\n * @example toYears({ years: 10, days: 365 }) // 11\n */\nexports.toYears = createDurationConverter('years');\n"},"sourceMaps":{"js":{"version":3,"file":"toUnit.js","sourceRoot":"","sources":["../src/toUnit.ts"],"names":[],"mappings":";;;AACA,iCAAgC;AAChC,qCAAyD;AAEzD;;;;;;GAMG;AACI,IAAM,cAAc,GAAG,UAAC,QAAuB;IACrD,IAAM,MAAM,GAAG,aAAK,CAAC,QAAQ,CAAC,CAAC;IAE/B,OAAO,kBAAU,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,EAAsB;YAApB,IAAI,UAAA,EAAE,YAAY,kBAAA;QACpD,OAAO,KAAK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC;IAC9C,CAAC,EAAE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AANW,QAAA,cAAc,kBAMzB;AAEF;;;GAGG;AACI,IAAM,MAAM,GAAG,UACrB,QAAuB,EACvB,IAAiC;IAEjC,OAAO,sBAAc,CAAC,QAAQ,CAAC,GAAG,sBAAc,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC;AACrE,CAAC,CAAC;AALW,QAAA,MAAM,UAKjB;AAEF,IAAM,uBAAuB,GAAG,UAAC,IAAiC;IACjE,OAAO,UAAC,QAAuB,IAAa,OAAA,cAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAtB,CAAsB,CAAC;AACpE,CAAC,CAAC;AAEF;;;GAGG;AACU,QAAA,SAAS,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAC;AAE5D;;;GAGG;AACU,QAAA,SAAS,GAAG,uBAAuB,CAAC,SAAS,CAAC,CAAC;AAE5D;;;GAGG;AACU,QAAA,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC;AAExD;;;GAGG;AACU,QAAA,MAAM,GAAG,uBAAuB,CAAC,MAAM,CAAC,CAAC;AAEtD;;;GAGG;AACU,QAAA,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC;AAExD;;;;;GAKG;AACU,QAAA,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC,CAAC;AAE1D;;;;;GAKG;AACU,QAAA,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC,CAAC","sourcesContent":[null]}},"error":null,"hash":"22e29e519e32cf7b755075f9e274da45","cacheData":{"env":{}}}