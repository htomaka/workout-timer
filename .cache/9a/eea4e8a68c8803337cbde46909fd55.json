{"id":"node_modules/duration-fns/dist/toString.js","dependencies":[{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toString.js.map","includedInParent":true,"mtime":1643565527476},{"name":"/home/htomaka/Projects/workout/package.json","includedInParent":true,"mtime":1643565530508},{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/package.json","includedInParent":true,"mtime":1643565527368},{"name":"./parse","loc":{"line":15,"column":22},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toString.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/parse.js"},{"name":"./isZero","loc":{"line":16,"column":23},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toString.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/isZero.js"},{"name":"./lib/getUnitCount","loc":{"line":17,"column":29},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toString.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/lib/getUnitCount.js"},{"name":"./lib/units","loc":{"line":18,"column":22},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toString.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/lib/units.js"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toString = void 0;\nvar parse_1 = require(\"./parse\");\nvar isZero_1 = require(\"./isZero\");\nvar getUnitCount_1 = require(\"./lib/getUnitCount\");\nvar units_1 = require(\"./lib/units\");\nvar joinComponents = function (component) {\n    return component\n        .join('')\n        // Commas are mentioned in the spec as the preferred decimal delimiter\n        .replace(/\\./g, ',');\n};\n/**\n * Stringify a duration into an ISO duration string.\n *\n * @example\n * toString({ years: 1, hours: 6 }) // 'P1YT6H'\n * toString(6000) // 'PT6S'\n */\nvar toString = function (duration) {\n    // Zero values are a special case, since \"P\" is not a valid value.\n    // At least one unit must be specified.\n    if (isZero_1.isZero(duration)) {\n        return 'P0D';\n    }\n    var parsed = __assign({}, parse_1.parse(duration));\n    // Weeks should not be included in the output, unless it is the only unit.\n    if (getUnitCount_1.getUnitCount(parsed) === 1 && parsed.weeks !== 0) {\n        return \"P\" + parsed.weeks + \"W\";\n    }\n    var components = {\n        period: [],\n        time: [],\n    };\n    // Some units should be converted before stringifying.\n    // For example, weeks should not be mixed with other units, and milliseconds\n    // don't exist on ISO duration strings.\n    units_1.UNITS_META.forEach(function (_a) {\n        var fromUnit = _a.unit, toUnit = _a.stringifyConvertTo;\n        if (toUnit == null) {\n            return;\n        }\n        var millisecondValue = parsed[fromUnit] * units_1.UNITS_META_MAP[fromUnit].milliseconds;\n        parsed[toUnit] += millisecondValue / units_1.UNITS_META_MAP[toUnit].milliseconds;\n        parsed[fromUnit] = 0;\n    });\n    // Push each non-zero unit to its relevant array\n    units_1.UNITS_META.forEach(function (_a) {\n        var unit = _a.unit, ISOPrecision = _a.ISOPrecision, ISOCharacter = _a.ISOCharacter;\n        var value = parsed[unit];\n        if (ISOPrecision != null && value !== 0) {\n            components[ISOPrecision].push(\"\" + value + ISOCharacter);\n        }\n    });\n    // Build output string\n    var output = \"P\" + joinComponents(components.period);\n    if (components.time.length) {\n        output += \"T\" + joinComponents(components.time);\n    }\n    return output;\n};\nexports.toString = toString;\n"},"sourceMaps":{"js":{"version":3,"file":"toString.js","sourceRoot":"","sources":["../src/toString.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,iCAAgC;AAChC,mCAAkC;AAClC,mDAAkD;AAClD,qCAAyD;AAEzD,IAAM,cAAc,GAAG,UAAC,SAAmB;IAC1C,OAAA,SAAS;SACP,IAAI,CAAC,EAAE,CAAC;QACT,sEAAsE;SACrE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AAHrB,CAGqB,CAAC;AAEvB;;;;;;GAMG;AACI,IAAM,QAAQ,GAAG,UAAC,QAAuB;IAC/C,kEAAkE;IAClE,uCAAuC;IACvC,IAAI,eAAM,CAAC,QAAQ,CAAC,EAAE;QACrB,OAAO,KAAK,CAAC;KACb;IAED,IAAM,MAAM,gBAAQ,aAAK,CAAC,QAAQ,CAAC,CAAE,CAAC;IAEtC,0EAA0E;IAC1E,IAAI,2BAAY,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;QACrD,OAAO,MAAI,MAAM,CAAC,KAAK,MAAG,CAAC;KAC3B;IAED,IAAM,UAAU,GAAG;QAClB,MAAM,EAAE,EAAc;QACtB,IAAI,EAAE,EAAc;KACpB,CAAC;IAEF,sDAAsD;IACtD,4EAA4E;IAC5E,uCAAuC;IACvC,kBAAU,CAAC,OAAO,CAAC,UAAC,EAA8C;YAAtC,QAAQ,UAAA,EAAsB,MAAM,wBAAA;QAC/D,IAAI,MAAM,IAAI,IAAI,EAAE;YACnB,OAAO;SACP;QAED,IAAM,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,sBAAc,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;QAElF,MAAM,CAAC,MAAM,CAAC,IAAI,gBAAgB,GAAG,sBAAc,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC;QACzE,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,gDAAgD;IAChD,kBAAU,CAAC,OAAO,CAAC,UAAC,EAAoC;YAAlC,IAAI,UAAA,EAAE,YAAY,kBAAA,EAAE,YAAY,kBAAA;QACrD,IAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAE3B,IAAI,YAAY,IAAI,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE;YACxC,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAG,KAAK,GAAG,YAAc,CAAC,CAAC;SACzD;IACF,CAAC,CAAC,CAAC;IAEH,sBAAsB;IACtB,IAAI,MAAM,GAAG,MAAI,cAAc,CAAC,UAAU,CAAC,MAAM,CAAG,CAAC;IAErD,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE;QAC3B,MAAM,IAAI,MAAI,cAAc,CAAC,UAAU,CAAC,IAAI,CAAG,CAAC;KAChD;IAED,OAAO,MAAM,CAAC;AACf,CAAC,CAAC;AAlDW,QAAA,QAAQ,YAkDnB","sourcesContent":[null]}},"error":null,"hash":"4a69245c565368079da0611421604328","cacheData":{"env":{}}}