{"id":"node_modules/duration-fns/dist/isNegative.js","dependencies":[{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/isNegative.js.map","includedInParent":true,"mtime":1643565527420},{"name":"/home/htomaka/Projects/workout/package.json","includedInParent":true,"mtime":1643565530508},{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/package.json","includedInParent":true,"mtime":1643565527368},{"name":"./toUnit","loc":{"line":4,"column":23},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/isNegative.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toUnit.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNegative = void 0;\nvar toUnit_1 = require(\"./toUnit\");\n/**\n * Returns `true` if a duration is negative overall.\n *\n * Note, this function performs implicit normalization, so ambiguous\n * units, like months, work with average values.\n *\n * @example\n * isNegative('P-1D') // true\n * isNegative({ days: 1, hours: -25 }) // true\n * isNegative({ days: 1, hours: -23 }) // false\n */\nvar isNegative = function (duration) {\n    return toUnit_1.toMilliseconds(duration) < 0;\n};\nexports.isNegative = isNegative;\n"},"sourceMaps":{"js":{"version":3,"file":"isNegative.js","sourceRoot":"","sources":["../src/isNegative.ts"],"names":[],"mappings":";;;AACA,mCAA0C;AAE1C;;;;;;;;;;GAUG;AACI,IAAM,UAAU,GAAG,UAAC,QAAuB;IACjD,OAAA,uBAAc,CAAC,QAAQ,CAAC,GAAG,CAAC;AAA5B,CAA4B,CAAC;AADjB,QAAA,UAAU,cACO","sourcesContent":[null]}},"error":null,"hash":"208ab2fa676ddcb6b9f5f769e0e65862","cacheData":{"env":{}}}