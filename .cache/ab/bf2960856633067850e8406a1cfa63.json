{"id":"node_modules/duration-fns/dist/normalize.js","dependencies":[{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/normalize.js.map","includedInParent":true,"mtime":1643565527436},{"name":"/home/htomaka/Projects/workout/package.json","includedInParent":true,"mtime":1643565530508},{"name":"/home/htomaka/Projects/workout/node_modules/duration-fns/package.json","includedInParent":true,"mtime":1643565527368},{"name":"./lib/units","loc":{"line":26,"column":22},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/normalize.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/lib/units.js"},{"name":"./between","loc":{"line":27,"column":24},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/normalize.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/between.js"},{"name":"./apply","loc":{"line":28,"column":22},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/normalize.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/apply.js"},{"name":"./toUnit","loc":{"line":29,"column":23},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/normalize.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/toUnit.js"},{"name":"./parse","loc":{"line":30,"column":22},"parent":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/normalize.js","resolved":"/home/htomaka/Projects/workout/node_modules/duration-fns/dist/parse.js"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nvar units_1 = require(\"./lib/units\");\nvar between_1 = require(\"./between\");\nvar apply_1 = require(\"./apply\");\nvar toUnit_1 = require(\"./toUnit\");\nvar parse_1 = require(\"./parse\");\nvar createUnitsNormalizer = function (keys, getDivisor) {\n    return function (duration, remaining) {\n        var output = __assign({}, duration);\n        keys.forEach(function (unit) {\n            var divisor = getDivisor(unit);\n            output[unit] = ~~(remaining / divisor);\n            remaining -= output[unit] * divisor;\n        });\n        return output;\n    };\n};\nvar yearMonthNormalizer = createUnitsNormalizer(['years', 'months'], function (unit) { return units_1.UNITS_META_MAP_LITERAL[unit].months; });\nvar dayAndTimeNormalizer = createUnitsNormalizer(['days', 'hours', 'minutes', 'seconds', 'milliseconds'], function (unit) { return units_1.UNITS_META_MAP_LITERAL[unit].milliseconds; });\nvar baseNormalizer = function (duration) {\n    var _a = parse_1.parse(duration), years = _a.years, months = _a.months, weeks = _a.weeks, days = _a.days, rest = __rest(_a, [\"years\", \"months\", \"weeks\", \"days\"]);\n    var output = __assign({}, units_1.ZERO);\n    // Normalize years and months between themselves.\n    // They cannot be normalized with other units due to their variable length.\n    output = yearMonthNormalizer(output, toUnit_1.toMonths({ years: years, months: months }));\n    // Normalize unambiguous units. It could be argued that `days` is ambiguous as\n    // a day is not always 24 hours long, but the ISO 8601 spec says a day is 24 hours.\n    // When not changing timezones, a day is consistently 24 hours, whereas months\n    // and years are consistently irregular.\n    output = dayAndTimeNormalizer(output, toUnit_1.toMilliseconds(__assign(__assign({}, rest), { days: days + (weeks * 7) })));\n    return output;\n};\n/**\n * Convert a duration object or number of milliseconds into a complete\n * duration object that expresses the value in the most appropriate units.\n *\n * If a `referenceDate` argument is provided, the returned duration is normalized\n * relative to that date. This means each day, month and year has an unambiguous\n * duration, and the `normalize` function can safely convert between these units.\n *\n * @example\n * normalize({ milliseconds 4000 }) // { ..., seconds: 4, milliseconds: 0 }\n * normalize('P28DT24H') // { ..., days: 29 }\n * normalize('P28DT24H', '2018-02-01') // { ..., months: 1, days: 1 }\n * normalize('P28DT24H', '2016-02-01') // { ..., months: 1, days: 0 } (leap year)\n */\nvar normalize = function (duration, referenceDate) {\n    var durationToNormalize = referenceDate != null\n        // When using a reference date, `between` may give a result like this:\n        // { years: 1, months: -11 }\n        // Because of this, we pass that through `baseNormalizer` too.\n        ? between_1.between(referenceDate, apply_1.apply(referenceDate, duration))\n        : duration;\n    return baseNormalizer(durationToNormalize);\n};\nexports.normalize = normalize;\n"},"sourceMaps":{"js":{"version":3,"file":"normalize.js","sourceRoot":"","sources":["../src/normalize.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAoE;AAEpE,qCAAoC;AACpC,iCAAgC;AAChC,mCAAoD;AACpD,iCAAgC;AAEhC,IAAM,qBAAqB,GAAG,UAC7B,IAAS,EACT,UAA+B;IAE/B,OAAO,UACN,QAA4B,EAC5B,SAAiB;QAEjB,IAAM,MAAM,gBAAQ,QAAQ,CAAE,CAAC;QAE/B,IAAI,CAAC,OAAO,CAAC,UAAA,IAAI;YAChB,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC;YACvC,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IACf,CAAC,CAAC;AACH,CAAC,CAAC;AAEF,IAAM,mBAAmB,GAAG,qBAAqB,CAChD,CAAC,OAAO,EAAE,QAAQ,CAAC,EACnB,UAAA,IAAI,IAAI,OAAA,8BAAsB,CAAC,IAAI,CAAC,CAAC,MAAM,EAAnC,CAAmC,CAC3C,CAAC;AAEF,IAAM,oBAAoB,GAAG,qBAAqB,CACjD,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,CAAC,EACvD,UAAA,IAAI,IAAI,OAAA,8BAAsB,CAAC,IAAI,CAAC,CAAC,YAAY,EAAzC,CAAyC,CACjD,CAAC;AAEF,IAAM,cAAc,GAAG,UAAC,QAAuB;IAC9C,IAAM,KAA0C,aAAK,CAAC,QAAQ,CAAC,EAAvD,KAAK,WAAA,EAAE,MAAM,YAAA,EAAE,KAAK,WAAA,EAAE,IAAI,UAAA,EAAK,IAAI,cAArC,oCAAuC,CAAkB,CAAC;IAChE,IAAI,MAAM,gBAAQ,YAAI,CAAE,CAAC;IAEzB,iDAAiD;IACjD,2EAA2E;IAC3E,MAAM,GAAG,mBAAmB,CAC3B,MAAM,EACN,iBAAQ,CAAC,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAC3B,CAAC;IAEF,8EAA8E;IAC9E,mFAAmF;IACnF,8EAA8E;IAC9E,wCAAwC;IACxC,MAAM,GAAG,oBAAoB,CAC5B,MAAM,EACN,uBAAc,uBAAM,IAAI,KAAE,IAAI,EAAE,IAAI,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,IAAG,CACrD,CAAC;IAEF,OAAO,MAAM,CAAC;AACf,CAAC,CAAC;AAEF;;;;;;;;;;;;;GAaG;AACI,IAAM,SAAS,GAAG,UACxB,QAAuB,EACvB,aAAyB;IAEzB,IAAM,mBAAmB,GAAG,aAAa,IAAI,IAAI;QAChD,sEAAsE;QACtE,4BAA4B;QAC5B,8DAA8D;QAC9D,CAAC,CAAC,iBAAO,CAAC,aAAa,EAAE,aAAK,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QACxD,CAAC,CAAC,QAAQ,CAAC;IAEZ,OAAO,cAAc,CAAC,mBAAmB,CAAC,CAAC;AAC5C,CAAC,CAAC;AAZW,QAAA,SAAS,aAYpB","sourcesContent":[null]}},"error":null,"hash":"a0a7d22caa9d6b5a44c3dc085cab59a4","cacheData":{"env":{}}}